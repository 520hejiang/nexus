#!/bin/bash

# NEXUS节点优化脚本
# 适用于低配置硬件 (i5-6200U, 4GB RAM, NVIDIA 920MX)
# 作者: Claude AI助手

echo "==================================="
echo "    NEXUS 节点优化脚本 v1.0"
echo "==================================="

# 颜色定义
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# 检查是否以管理员权限运行
check_admin() {
    if [[ $EUID -eq 0 ]]; then
        echo -e "${GREEN}✓ 管理员权限检查通过${NC}"
    else
        echo -e "${RED}✗ 请以管理员权限运行此脚本${NC}"
        echo "Linux/Mac: sudo $0"
        echo "Windows: 以管理员身份运行"
        exit 1
    fi
}

# 系统信息检测
check_system() {
    echo -e "\n${BLUE}[1/8] 检测系统信息...${NC}"
    
    OS=$(uname -s)
    echo "操作系统: $OS"
    
    # CPU信息
    if command -v lscpu &> /dev/null; then
        CPU_CORES=$(lscpu | grep "^CPU(s):" | awk '{print $2}')
        CPU_MODEL=$(lscpu | grep "Model name" | cut -d: -f2 | xargs)
        echo "CPU: $CPU_MODEL"
        echo "CPU核心数: $CPU_CORES"
    else
        CPU_CORES=4  # 默认值
        echo "CPU核心数: $CPU_CORES (默认)"
    fi
    
    # 内存信息
    if command -v free &> /dev/null; then
        TOTAL_MEM=$(free -h | awk '/^Mem:/ {print $2}')
        echo "总内存: $TOTAL_MEM"
    else
        echo "内存: 4GB + 16GB虚拟内存"
    fi
}

# 系统优化
optimize_system() {
    echo -e "\n${BLUE}[2/8] 系统优化设置...${NC}"
    
    # Linux系统优化
    if [[ "$OS" == "Linux" ]]; then
        echo "正在优化Linux系统参数..."
        
        # 优化虚拟内存使用
        echo "vm.swappiness=10" >> /etc/sysctl.conf 2>/dev/null || echo "无法修改swappiness设置"
        
        # 优化文件描述符限制
        echo "* soft nofile 65536" >> /etc/security/limits.conf 2>/dev/null || true
        echo "* hard nofile 65536" >> /etc/security/limits.conf 2>/dev/null || true
        
        # 应用设置
        sysctl -p 2>/dev/null || true
        
        echo -e "${GREEN}✓ Linux系统优化完成${NC}"
    fi
    
    # macOS系统优化
    if [[ "$OS" == "Darwin" ]]; then
        echo "正在优化macOS系统参数..."
        
        # 增加文件描述符限制
        launchctl limit maxfiles 65536 65536 2>/dev/null || true
        
        echo -e "${GREEN}✓ macOS系统优化完成${NC}"
    fi
}

# 清理系统资源
cleanup_resources() {
    echo -e "\n${BLUE}[3/8] 清理系统资源...${NC}"
    
    # 清理临时文件
    if [[ "$OS" == "Linux" ]]; then
        # 清理包管理器缓存
        if command -v apt-get &> /dev/null; then
            apt-get clean 2>/dev/null || true
            apt-get autoclean 2>/dev/null || true
        fi
        
        if command -v yum &> /dev/null; then
            yum clean all 2>/dev/null || true
        fi
        
        # 清理临时文件
        find /tmp -type f -atime +7 -delete 2>/dev/null || true
    fi
    
    # 清理用户临时文件
    rm -rf ~/.cache/thumbnails/* 2>/dev/null || true
    rm -rf ~/.cache/mesa_shader_cache/* 2>/dev/null || true
    
    echo -e "${GREEN}✓ 系统清理完成${NC}"
}

# 检查NEXUS CLI是否安装
check_nexus_cli() {
    echo -e "\n${BLUE}[4/8] 检查NEXUS CLI...${NC}"
    
    if command -v nexus-network &> /dev/null; then
        VERSION=$(nexus-network --version 2>/dev/null || echo "未知版本")
        echo -e "${GREEN}✓ NEXUS CLI已安装: $VERSION${NC}"
        return 0
    else
        echo -e "${YELLOW}! NEXUS CLI未安装，正在安装...${NC}"
        
        # 安装NEXUS CLI
        if curl -s https://cli.nexus.xyz/ | sh; then
            echo -e "${GREEN}✓ NEXUS CLI安装成功${NC}"
            
            # 刷新环境变量
            source ~/.bashrc 2>/dev/null || source ~/.zshrc 2>/dev/null || true
            export PATH="$HOME/.nexus:$PATH"
            
            return 0
        else
            echo -e "${RED}✗ NEXUS CLI安装失败${NC}"
            return 1
        fi
    fi
}

# 创建优化配置
create_config() {
    echo -e "\n${BLUE}[5/8] 创建优化配置...${NC}"
    
    # 创建配置目录
    mkdir -p ~/.nexus/config
    
    # 创建优化配置文件
    cat > ~/.nexus/config/optimization.conf << EOF
# NEXUS节点优化配置
# 适用于低配置硬件

# CPU设置 (针对双核四线程i5-6200U)
CPU_LIMIT=70
MAX_WORKERS=2
THREAD_POOL_SIZE=4

# 内存设置 (4GB物理 + 16GB虚拟)
MEMORY_LIMIT=6GB
SWAP_USAGE=moderate

# 网络设置
CONNECTION_TIMEOUT=30
RETRY_ATTEMPTS=3
BATCH_SIZE=small

# 性能设置
ENABLE_GPU=true
GPU_MEMORY_LIMIT=1GB
PROOF_CACHE_SIZE=2GB

# 监控设置
ENABLE_MONITORING=true
LOG_LEVEL=info
STATS_INTERVAL=300
EOF
    
    echo -e "${GREEN}✓ 优化配置已创建${NC}"
}

# 创建启动脚本
create_start_script() {
    echo -e "\n${BLUE}[6/8] 创建优化启动脚本...${NC}"
    
    cat > ~/.nexus/start_optimized.sh << 'EOF'
#!/bin/bash

# NEXUS优化启动脚本
echo "启动NEXUS节点（优化模式）..."

# 加载配置
CONFIG_FILE="$HOME/.nexus/config/optimization.conf"
if [ -f "$CONFIG_FILE" ]; then
    source "$CONFIG_FILE"
    echo "✓ 已加载优化配置"
else
    echo "! 警告: 未找到优化配置文件"
fi

# 检查系统资源
echo "检查系统资源..."
FREE_MEM=$(free -m | awk 'NR==2{printf "%.1f", $7/1024}' 2>/dev/null || echo "未知")
CPU_USAGE=$(top -bn1 | grep "Cpu(s)" | awk '{print $2}' | awk -F'%' '{print $1}' 2>/dev/null || echo "未知")

echo "可用内存: ${FREE_MEM}GB"
echo "CPU使用率: ${CPU_USAGE}%"

# 设置CPU优先级
renice -n 5 $$ 2>/dev/null || true

# 启动参数
NEXUS_ARGS=""

# CPU限制
if [ ! -z "$CPU_LIMIT" ]; then
    NEXUS_ARGS="$NEXUS_ARGS --cpu-limit $CPU_LIMIT"
fi

# 工作线程数
if [ ! -z "$MAX_WORKERS" ]; then
    NEXUS_ARGS="$NEXUS_ARGS --workers $MAX_WORKERS"
fi

# 检查节点ID
if [ -f "$HOME/.nexus/credentials.json" ]; then
    echo "✓ 找到现有凭据"
    NODE_ID=$(cat "$HOME/.nexus/credentials.json" | grep -o '"node_id":"[^"]*"' | cut -d'"' -f4 2>/dev/null || echo "")
    if [ ! -z "$NODE_ID" ]; then
        NEXUS_ARGS="$NEXUS_ARGS --node-id $NODE_ID"
        echo "✓ 使用节点ID: $NODE_ID"
    fi
else
    echo "! 需要首次注册"
    echo "请运行以下命令进行注册:"
    echo "nexus-network register-user --wallet-address <your-wallet-address>"
    echo "nexus-network register-node"
fi

# 启动NEXUS
echo "启动命令: nexus-network start $NEXUS_ARGS"
echo "按Ctrl+C停止节点"
echo "=================================="

# 启动节点
nexus-network start $NEXUS_ARGS

EOF
    
    chmod +x ~/.nexus/start_optimized.sh
    echo -e "${GREEN}✓ 优化启动脚本已创建${NC}"
}

# 创建监控脚本
create_monitor_script() {
    echo -e "\n${BLUE}[7/8] 创建监控脚本...${NC}"
    
    cat > ~/.nexus/monitor.sh << 'EOF'
#!/bin/bash

# NEXUS节点监控脚本
echo "NEXUS节点监控 - 按Ctrl+C退出"
echo "=================================="

while true; do
    clear
    echo "NEXUS节点状态监控 - $(date)"
    echo "=================================="
    
    # CPU使用率
    if command -v top &> /dev/null; then
        CPU_USAGE=$(top -bn1 | grep "Cpu(s)" | awk '{print $2}' | awk -F'%' '{print $1}' 2>/dev/null || echo "N/A")
        echo "CPU使用率: ${CPU_USAGE}%"
    fi
    
    # 内存使用
    if command -v free &> /dev/null; then
        free -h | head -2
    fi
    
    echo ""
    
    # 磁盘使用
    if command -v df &> /dev/null; then
        df -h / | tail -1 | awk '{print "磁盘使用: " $3 "/" $2 " (" $5 ")"}'
    fi
    
    echo ""
    
    # NEXUS进程状态
    if pgrep -f "nexus-network" > /dev/null; then
        echo "✓ NEXUS节点正在运行"
        
        # 进程资源使用
        NEXUS_PID=$(pgrep -f "nexus-network" | head -1)
        if [ ! -z "$NEXUS_PID" ]; then
            if command -v ps &> /dev/null; then
                ps -o pid,pcpu,pmem,time,cmd -p $NEXUS_PID 2>/dev/null | tail -1
            fi
        fi
    else
        echo "✗ NEXUS节点未运行"
    fi
    
    echo ""
    echo "=================================="
    echo "5秒后刷新... (Ctrl+C退出)"
    
    sleep 5
done

EOF
    
    chmod +x ~/.nexus/monitor.sh
    echo -e "${GREEN}✓ 监控脚本已创建${NC}"
}

# 显示使用说明
show_usage() {
    echo -e "\n${GREEN}[8/8] 优化完成！${NC}"
    echo "=================================="
    echo -e "${YELLOW}使用说明:${NC}"
    echo ""
    echo "1. 启动优化节点:"
    echo "   ~/.nexus/start_optimized.sh"
    echo ""
    echo "2. 监控节点状态:"
    echo "   ~/.nexus/monitor.sh"
    echo ""
    echo "3. 如果是第一次运行，请先注册:"
    echo "   nexus-network register-user --wallet-address <你的钱包地址>"
    echo "   nexus-network register-node"
    echo ""
    echo "4. 查看节点状态:"
    echo "   nexus-network status"
    echo ""
    echo "5. 停止节点:"
    echo "   按Ctrl+C或运行: pkill -f nexus-network"
    echo ""
    echo -e "${YELLOW}优化配置文件位置:${NC}"
    echo "   ~/.nexus/config/optimization.conf"
    echo ""
    echo -e "${GREEN}针对你的硬件配置的优化:${NC}"
    echo "• CPU限制: 70% (避免系统卡顿)"
    echo "• 工作线程: 2个 (适合双核CPU)"
    echo "• 内存管理: 优化虚拟内存使用"
    echo "• GPU支持: 启用NVIDIA 920MX"
    echo ""
    echo "=================================="
}

# 主函数
main() {
    echo "开始NEXUS节点优化..."
    
    # 注释掉管理员权限检查，因为不是所有操作都需要
    # check_admin
    
    check_system
    optimize_system
    cleanup_resources
    check_nexus_cli
    create_config
    create_start_script
    create_monitor_script
    show_usage
    
    echo -e "\n${GREEN}🎉 NEXUS节点优化脚本执行完成！${NC}"
    echo -e "${BLUE}现在可以运行 ~/.nexus/start_optimized.sh 启动优化后的节点${NC}"
}

# 执行主函数
main "$@"
